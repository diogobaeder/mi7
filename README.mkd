Introduction
============

MI7 is my attempt at getting a spying/mocking/stubbing/"whatever you want to call"
library that actually stimulates me to write proper tests.

It's very easy to call on others for not writing enough tests. Doing proper TDD yourself,
now that's a different matter, isn't it?

Vision
======

My vision with MI7 is to create a mocking tool that is as Pythonic as possible.
This means that you should be able to keep your python code exactly as it is
supposed to be, and still be able to test things in isolation.

I'll try to illustrate with an example:

    @agent.spy(tests.controllers.User)
    def test_controller_verifies_if_user_is_authenticated():
        agents.User \
             .intercept('is_authenticated') \
             .returns(True)

        controller = tests.controllers.MyController()

        result = controller.index()

        assert result == "WooHoo"

        assert agents.User
                     .saw('is_authenticated')
                     .times == 1

        finish_mission()

Some concepts going on here:

* There's the agent.spy action. This decorator instructs our agent on his
mission. He's supposed to keep watch of the User class in the
mysite.controllers module.
* The agents collection keeps track of all our agents until the end of the
mission. The agreement is that the agents will be known by their last name so
they are not entirely trackable (for their own safety). So in this case our
agent
is codenamed User, which is the last part of it's full name. If we have a
superstar agent (aren't they all?), we can name him as he wants, like this -
.as('Bond').
* Finally, you finish the mission, so we can generate mission status reports
and such. This step will undo all the interceptions, so it is pretty important
to finish the mission.

Comedy apart, the main thing here is that the majority of my test is ABOUT the
business and not creating mocks and expectations.

Current State
=============

MI7 is still building it's new office and will not be operational for a while.

Keep checking this page to see the developments.
